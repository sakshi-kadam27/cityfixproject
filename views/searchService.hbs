<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Service Providers</title>
  <link rel="stylesheet" href="/style.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Arial', sans-serif;
      background-color: #f4f4f4;
      padding-top: 80px;
    }

    /* Search Bar */
    .search-container {
      padding: 10px;
      background-color: #0d47a1;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      z-index: 100;
    }

    .search-bar {
      width: 100%;
      padding: 12px;
      font-size: 16px;
      border: none;
      border-radius: 5px;
      margin: 0;
    }

    /* Grid Container */
    .service-providers {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 20px;
      padding: 20px;
    }

    .service-provider-card {
      background-color: #ffffff;
      padding: 15px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      text-align: center;
      cursor: pointer;
      transition: transform 0.3s ease;
    }

    .service-provider-card:hover {
      transform: translateY(-5px);
    }

    .service-provider-card img {
      width: 100px;
      height: 100px;
      border-radius: 50%;
      margin-bottom: 15px;
    }

    .service-provider-card h3 {
      font-size: 1.2rem;
      margin-bottom: 10px;
    }

    .service-provider-card p {
      font-size: 0.9rem;
      margin: 5px 0;
      color: #555;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .service-providers {
        grid-template-columns: repeat(1, 1fr);
      }
    }

    /* Footer */
    footer {
      text-align: center;
      padding: 15px;
      font-size: 1rem;
      background-color: #333;
      color: white;
      position: fixed;
      bottom: 0;
      width: 100%;
    }

    /* Loading Spinner */
    .loading {
      text-align: center;
      font-size: 1.5rem;
      color: #0d47a1;
      padding: 50px;
    }

    /* Modal Popup */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      justify-content: center;
      align-items: center;
    }

    .modal-content {
      background-color: white;
      padding: 20px;
      border-radius: 8px;
      text-align: center;
      width: 300px;
    }

    .modal-content input[type="date"],
    .modal-content input[type="time"] {
      padding: 10px;
      width: 100%;
      margin: 10px 0;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    .modal-content button {
      background-color: #0d47a1;
      color: white;
      padding: 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .modal-content button:hover {
      background-color: #003366;
    }
  </style>
</head>

<body>

  <!-- Search Bar -->
  <div class="search-container">
    <input type="text" id="search-input" class="search-bar" placeholder="Search for service providers..." />

  </div>

  <!-- Loading Message -->
  <div class="loading" id="loading-message">
    Loading...
  </div>

  <!-- Service Providers Section -->
  <section class="service-providers" id="service-providers-section">
    <!-- Service providers will be populated here -->
  </section>

  <!-- Footer -->
  <footer>
    <p>&copy; 2025 CityFix. All rights reserved.</p>
  </footer>

  <!-- Modal Popup for Date & Time -->
  <div class="modal" id="modal">
    <div class="modal-content">
      <h3>Select a Date and Time</h3>
      <form id="appointment-form">
        <input type="date" id="appointment-date" required>
        <input type="time" id="appointment-time" required>
        <input type="hidden" id="provider-id">
        <input type="hidden" id="provider-work">
        <button type="submit">Submit</button>
      </form>
    </div>
  </div>

  <script>
    // Function to fetch and display service providers
    let allProviders = [];

    async function fetchServiceProviders() {
      try {
        const response = await fetch('http://localhost:5000/auth/getAllServiceProviders');
        if (!response.ok) {
          throw new Error("Failed to fetch service providers");
        }

        const data = await response.json();
        if (data?.data?.length > 0) {
          allProviders = data.data;
          displayProviders(allProviders); // initial load

          document.getElementById('loading-message').style.display = 'none';

          // Listen to search input
          const searchInput = document.getElementById('search-input');
          searchInput.addEventListener('input', () => {
            const searchTerm = searchInput.value.toLowerCase();
            const filtered = allProviders.filter(provider =>
              provider.work.toLowerCase().includes(searchTerm)
            );
            displayProviders(filtered);
          });
        } else {
          document.getElementById('loading-message').textContent = "No service providers found.";
        }
      } catch (error) {
        console.error(error);
        document.getElementById('loading-message').textContent = "Error loading service providers.";
      }
    }

    function displayProviders(providers) {
      const container = document.getElementById('service-providers-section');
      container.innerHTML = ''; // clear existing cards

      providers.forEach(provider => {
        const card = document.createElement('div');
        card.classList.add('service-provider-card');
        card.setAttribute('data-id', provider.id);

        card.innerHTML = `
      <h3>${provider.name}</h3>
      <p>Role: ${provider.work}</p>
      <p>Address: ${provider.address}</p>
      <p>Price: ${provider.price}</p>
    `;

        card.addEventListener('click', () => {
          showModal(provider.id, provider.work);
        });

        container.appendChild(card);
      });

      if (providers.length === 0) {
        container.innerHTML = "<p>No matching service providers found.</p>";
      }
    }


    // Show the modal with the selected provider's id
    function showModal(providerId, providerService) {
      const modal = document.getElementById('modal');
      const providerIdField = document.getElementById('provider-id');
      const providerServiceField = document.getElementById('provider-work');
      providerIdField.value = providerId;
      providerServiceField.value = providerService;


      const today = new Date().toISOString().split('T')[0]; // Current date in YYYY-MM-DD format
      document.getElementById('appointment-date').setAttribute('min', today); // Prevent selecting past dates

      modal.style.display = 'flex';
    }

    // Close the modal on click outside the modal content
    window.onclick = function (event) {
      if (event.target === document.getElementById('modal')) {
        document.getElementById('modal').style.display = 'none';
      }
    }

    // Handle form submission
    document.getElementById('appointment-form').addEventListener('submit', function (event) {
      event.preventDefault();

      const date = document.getElementById('appointment-date').value;
      const time = document.getElementById('appointment-time').value;
      const providerId = document.getElementById('provider-id').value;
      const providerService = document.getElementById('provider-work').value;


      // You can submit this data to your backend API here
      console.log('Appointment Details:', {
        providerId,
        providerService,
        date,
        time
      });


      fetch("http://localhost:5000/auth/storeBookingDetails", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          service_provider_id: providerId,
          date: date,
          time: time,
          name_of_service: providerService, // dynamically use from session
          status: 'pending'
        })
      })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert("Appointment successfully booked!");
          } else {
            alert("Failed to book appointment.");
          }
          document.getElementById('modal').style.display = 'none';
        })
        .catch(error => {
          console.error("Booking error:", error);
          alert("Something went wrong!");
        });


      alert('Appointment successfully booked!');
      document.getElementById('modal').style.display = 'none';
    });

    // Call the fetch function when the page loads
    window.onload = fetchServiceProviders;
  </script>

</body>

</html>